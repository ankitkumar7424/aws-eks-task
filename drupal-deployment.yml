#creating a service for drupal
apiVersion: v1
kind: Service
metadata:
  name: drupal
  labels:
    app: drupal
spec:
  ports:
    - port: 80
  selector:
    app: drupal
    tier: frontend
  type: LoadBalancer
---
#creating a pvc for drupal
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drupal-pv-claim
  labels:
    app: drupal
spec:
  accessModes:
    - ReadWriteOnce #to give the storage as read write access mode
  resources:
    requests:
      storage: 5Gi
---
#creating a deployment for the drupal 
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: drupal
  labels:
    app: drupal
spec:
  selector:
    matchLabels:
      app: drupal
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: drupal
        tier: frontend
    spec:
      containers:
      - image: drupal:8-apache #for drupal with MYSQL:5.6 8-apache version of the drupal is compatatible 
        name: drupal
        env:
        - name: DRUPAL_DB_HOST
          value: drupalmysql
        - name: DRUPAL_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password #it access the ppassword from the kustomization file 
        - name: DRUPAL_DB_USER
          valueFrom:
            secretKeyRef:
              name: drupal-db-user
              key: password #it access the ppassword from the kustomization file 
        - name: DRUPAL_DB_NAME
          value: drupal-mysql
        ports:
        - containerPort: 80
          name: drupal
        volumeMounts:
        - name: drupal-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: drupal-persistent-storage
        persistentVolumeClaim:
          claimName: drupal-pv-claim
